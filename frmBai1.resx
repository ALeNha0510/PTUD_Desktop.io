<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxISEhISERIVFhUXEhYVGRcXFhcXGRgXFxcWGhgWGBUZ
        HighGholGxUVITIhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhoQEBovJiAlLS0tLS0tNS8tLy0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLy0tLS3/wAARCACKAW0DASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAYHAwQFAggB/8QATBAAAgEDAQQGBQgEDAUFAQAAAQIDAAQREgUhMUEG
        E1FhcYEHIjKRoRRCUnKSscHRQ4Ky0iMzU1Rzg5OiwtPh8BUXYqPiJESkw/EW/8QAGgEBAAMBAQEAAAAA
        AAAAAAAAAAIDBAEFBv/EADoRAAIBAgIHBwIEBAcBAAAAAAABAgMRBCEFEjFBUZGhE2FxgbHR8CJSFTKS
        wRRC4fEkM0NTcsLSBv/aAAwDAQACEQMRAD8AvGlKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKU
        ApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUAp
        SlAKUpQClK/CaA/aVFNpdMIwWS2USlThnJ0wKeY6zB1sPooD3kVB9t9I7iQ+vduo+jCvVL7wxY+Z50V3
        sRPVjF2m7d218ls8HZls3N7FGMyyIn12VfvNaknSGzHG6h/tFPwBqjUsWlJaIzyEnikSN7yIyfjWltNJ
        IiUJmV+YYKhHPeNI5VFxq7rdfYvTwSWbm/KK/wCzLzuOmdig/jwfqpI37KmtKT0hWY4CZvCPH7RFUJNJ
        Lx6yUf1jD7jWJXkPGaUf1r/vVHUq8VyZYp6P3qpzgv2fqXs3pLtxwt7o+UP+bWE+lCH+aXP/AGP8yqaS
        UDjLMf66T96svXR/Tn/tpfxajhW+5cmT7XRv2VOcPYtw+lOL+ZXX/Y/zaD0qRfzG8/8Ajn/7aqZb1Bu6
        yX+0B/aBr9ZpZJEhjkk1MdRDqmFjHFmAQEjOBg7jwpq1Vm3Hqdi9HzkowhVu9ivD2Lgt/SbbP+guR+pE
        fukNbw6e2nMTDxT8jVdzMF0xoNchwFH4nA+4e4Zxtx9F7x97Kwzy6sn4DBH2jVcZVp5xtbvNVeho3DPV
        qublwja66W69+8sKHppZNxlK/WjcfELiura7Ugl3RzRsexXUn3capraeyRCrEuxKEalJkU4JwT/GHGM5
        8Aa5p1aOsR/VDYwQQAw5FzqyeB5VZq1lwfNGKUtHS/L2ke/6ZdE4s+haVRmyent7bnDZkQcmy47sb9Q9
        4HdVjdGunNtdgDV1bkcGPqk7/Zb8DjuzTXtlJW9Oay8tvcVvC6ycqMlNLhe6S3uLs7d6vHvJbSlKsMgp
        SlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApXOv9rwQDMsiqezOW+yN9RbbvpDhj
        XRbK0s7bkQggd7ueSjd7x21Fzina+ZfDDVpx11F6vF5JeL2Ek29t2C0j6yd8AnCgDU7k8FRBvYk7vOq7
        21t+a6yZyYYOVures47Z3HH+jXdwyeIrjmSWWYSSsZ7qQ6RgbkznKQr81QM5O4nfnA3VOOj/AETWMiW5
        xJLxC8UTwHzm7zuHLtqag9suXvx9PHdVOsoZU/1b/Lgu/wDM9+rnE4ey9g3N2F3CCAABSVwSvIRxjG7v
        OB2ZqWbL6JWcGCIhI/05cOc9oBGlfICuyXqNbd6a21s4hxJNMf0cK6yM/SOQBu34znnirDKu47W3Nprb
        QSTNjCLuHIsdyjwzjyzXzvtLaLSu8rnLOxOT47z7/wAalfpF6YtcqluIZYMHUyygKSSBgjB3gKf757qi
        fRnZvyy9ht8eoXy/9Eg1OD2ZA057WFcJJcTe25bx28FqGZzcyxiZ0OOrjifPVDgG6wqASM7vdnkWNxEZ
        EFwWWIth2jALKD84Ag5xxxxIBxvrr+lSORNpTs4IVxE0ZxuKCJE9XwZGHlURMtCSRYHpE6LxWBgaGRnS
        VT7WCcqF9YMoAIbVnhu8DgROF8msu3+kL3CWkZJ0wWyRb+bLkF896hB+rWivaNxocRaPRPp3DawMtwgC
        xoSjIg1kgbozgbyxwA3ad/bXO+VuBNeXRzNKdbj6A4RwL3KML4knnUY6PW/Xy63H8HCfJpeXkoOfEivX
        Sbaep+qX2U3nvbG73fn2VlqvXmqa8z3cDTWEw8sZNZvKCfHj83J8TubF6VNas0iJG0rcWcM2kfRXDDA4
        e6rZ6O7cF3AkyjGchhnOlxxH3EdxFUJs/ZE8qh1KgHhqYgkdoAB3eNTjoNtKSwSZJomkV3Vx1TRnDY0t
        kOy8QF4dlXqpTT1bo82WBxU49pqSd872zd9/HPbsOp6RhomVm9iaMqfEDSw+yV99R/0VbY0Xb20hGJoy
        MHh1kWTjHevWe4Vn9IHSSO7gVFhkR45NWXMPAqdS4SRjv9U8OVV4100cwkQlSGDAgkEahk4I8SKmzJFb
        UXxtbobaz5KL1L/SjGB5x8D5YPfVbdJdgy2kgDEK7AlJV9l8cQc8+GcjdkcRx5qdJ7gYxNJkc9bfnUw2
        h0mS8shFcROZtOoSKYdIkXOHwXBAI9oY+cccqNJqzEXKDUk7Nb9jXgZeg3pIZNMN2SycA/Fl5AHl5e76
        NW3aXKyIrxsGVhkEHINfKd0cMd/x8vOrH6N7cuNn9Srtq1RK80TcFZ8kL3OI+rye3IPCs032We708O7u
        3buC9ahSePbilapa990tm3hLPJ7JfzJO8ndtK52xtrR3MYeJsjmD7SnsYV0asTTV0YJwlCTjJWa2pilK
        V0iKUpQClKUApSlAKUpQClKUApSlAKUpQClKUApWC4uEjUs7BVHMnAqLbT6cRJkRKZD2n1V/M+4VGU4x
        2s0YfCVsQ7Uot+nN5dSYVp320IoRmWRU8SMnwHE1WG0+mV1JkB9C9kfq/wB72vjUfkmJJJJJPEk5J8TW
        WWLS/Kj3KH/zs5Z1Z27ln1/ubHSa8nllmMTRYLvhyZQSuTpOlgd+nSN2Bu3Co9ZWlxCpCvCXY5ZyHJbj
        gcRgDPDz4k11C1flZliJRbcbHuVNFUKsIwqttRtZXtsy3W+bLHnY99d2ztJHJBrK6ctCzYGcnH8IMZwP
        dXRn6U7UbhdxJ9W2Q/tsa0MV+4qX8XV4lX4DgP8Ab6y9zS2kL24/j79nHYY8L9gPpHkK5zdH5CMfKF/s
        f/Ou7isqRmixdXiceg8Av5OsvcjA6LycrhOf6Ldv7tVbuxtl3lpIZba5jVyhQsYVb1SVJGHJA3qu/juq
        QJDWzHak8qmsRV4lU9DYBfydZe5DL7YN5MxeW5WRickuGJJ/Adw3DlWsOiV19K3Pj1g/CrFj2f21kMaI
        MnAHacAe81Pt6vHoUvRWB3RfNlbHondfSg8mcf4a9Do3cj2pYlHMgsxA5kAqAT51YE6MQNMbYO8HTgEd
        oZsBh4ZrC2yJGB1MACMbvWOD2E4APka669X4iEdGYC12n+pvqmvU4VzptYAqD2BpXO8lzzPfnJNRRIoy
        ra5CHzkYwc545qwdobLQhtYDZBHrAHGeaj5p7xg1Cbm1aBw0MaEqwOl116sdz5B8xXaFSML32so0rg6+
        J1ezS7OKsknsvtytwsklfJZZ5G/D0jBwqIdwAADEnwxprpjbMoXCWAdvpydeAO/1HXd3fGpBa7ZBUCSZ
        h3B9I+wuB8KyDa9uvAMx+r+9iq4uktkebNk6ePleM6tv+EWut49VyeZFjsS5uisk3yWDcy6V6/UQfpDE
        nfjLDjWf/wDhFYjXPKcKBhIFGcf9byZH2TUhO3x8y3J7ycfcDWWPbF2xVYrVjq5rE7gfWcbl86s7d7I9
        EY5aIppudVybe+Ukv2vzbOPB0Pt1/Qzv/STAD7MSKR9quhBsFFUhbaBR3iR/hK7D4Uu7m61FXcKRxAxu
        yM8h+Naj9afamb3n86jKtPi/Q1UtF4ZJOMI9Zera5ZHQhsHj9gpGfpRJHCftRqp+NajbPiUks67zkksM
        5PPea1RbLxdmPuz5Z516WezQyKEuCRvEkvVLHnsAUZPP8+FV/nV31ZqssO1GELX+yCS87bNvqdnY9+kD
        hopQp4bjnPcQOI7qsPYO2luARwdcZ3EA55jPhwqlrzbkEYbSQx4aVAx9rh8fKv3oh05l+VQI5wpkVeRy
        CcYLEZzjnVtCVsjzdLUY1EntfHf/AFXndcD6CpSlbD5gUpSgFKUoBSlKAUpSgFKUoBSlKAUpSgFY5GwM
        8e7tPIVkqP7e29BBiOSZUdgCA2eBJ5+RHbg5xQWe4iG3doyTSTKygGORkCliMBTgYAB4jBzzBFRS41/R
        T7Z/cro9Neltk0gaNiZi2kkDCOmTpU7sscbw2Mb+ON1R6bpCoIV0ZWIBVXyCwOMYOnHPmRWGrSnJ5I+r
        0fpLDQpJSlqtbrZeVk8nz8dpmJfsT7R/dryS3YvvP7tY32og3So0RIyBKHQtx4Arw3cTgd9fkV6rFQYp
        FDcHdWVDuzufGD5Zqj+HqfaeotK4PfV+cj3qbsT7R/KvaluxPtH92sVzdxoxX1nYDJWP+EYDtKjeB34r
        zHti35sVOfZbCt9gkHu8adhU+0l+K4O2VVfPFG0NXYv2j+7XsBuwe8/lWGPbNtnDF075I2QebPgD39lb
        abVtsHD5OMjgoP67EL8al/D1PtK3pXCL/UR+xI30fcfzroQWjH5p/u/nWKynifB61Y1PzypZRnPCbemf
        ANxqR2vRWKQamm68Y9otrTxKBhH/AHPfXZQjSV6jsYaumab/AMq76Lrn0OCs8Qbqw2p/oIrSv9mMHFbI
        kdThlSP+mcB8dohi1ufA6aSuTdPbKsiQKzKvVhkTCgbyIwFwd+/HMdtbb2llCrZeIElTvdd+Acgk/WB/
        VNehSwsWrvkeDiNOV27Rsuvr7GCK6hziZrpsHeIoBCuO/rCX4HO4ipS81hZLHJ1YJdNaMV1OVwDkvIcg
        bxz7a4LX+TG3WRxW8aAPOSuWBLHq4E3szaW0ggbuXAVFekXSEXM/XFdCABIozjOheBIG4czjtPdSq6dJ
        XKcNTxOPnq611vb2JcWtngtrfmyT7R6QG5cOV0qBhQd7YByWY9/ZyFfj3IKnBx8aru86SBBkDJ5Co9eb
        emc5klI7FUkD3D7zWJOc23Y+nqfwuEhGCls+Z+P9kWBfhnO+Z/AYH3Vzp7SIYJJJyOJ7Tp/GoWu1ZMY6
        xseJ/HeK/RtZhG0ZRGyT67DU43Dcrk7uHZzNRVGV8yU9J0lG8I35fPcmyyW6cWXzNfrbetU/SL5DP3VW
        zSmsRlNTVDvKZ6YSyUCyJOl1uOGpvAfnitG96bFk6uPrlXVn1ZSme0ervAPPFQXXXkvU40tXYzHW0k6k
        dWUY271f1uTJumknJVz2kk/lWrN0snPBgPBR+OajAav0mu9lE5+IVrWT5ZHXn29O3GVvI4+6tdbtmI1E
        neOO+ueK27aPNHFIhGvUqSzZk68kgntz+NebKUpIj8dLBvHBzx8qyyepjUpA7cVtWtoHwR2j3Gkk47US
        pONeVoyvY+t43DAEcCAR4Gvdc7YD5trYniYI8+OgZro1pTurngSi4txe4UpSunBSlKAUpSgFKUoBSlKA
        UpSgFKUoDy7AAk8AM18vbe6Wy3V38pIwgkDqh+irDSG8hivqB1yCO0Yr48ZSBpPtJhT7t/3Efq1VVjdX
        PQ0dWUKjW9r0zt5kz2xsf5PPK6tiOVeujkTMkskUigqGjY40DURld43ZycVzYAIgBlYAzsumMC5WRt/q
        k72gY4AAzq56RUo6OzC82a6+v19pnSY20SmFjnCP2ht3ZvTxrF0Jt1a+t4mVQpkKvGuRIyiMgrdIWwRl
        uW7Ud47LIy1lcyV6Tpzcflt3v5kfGmFRujt11+02m9R/b3qArCP3AntqTbNnWK3kZOs1SQmNYo5FikaR
        zJrnMspOtQnVBQC+jURpzljYu2bHZdg1uPkcKfKJli9QKmAdwYgY1AOyLjl1meANR+G32dgS/wDC7YEw
        rO3/AKhc9XIIynEb3JkGVOOHqlsipFRGr+XFukIWWTNsWkjE7XNwJ5WXqwsigmEIEJY6VQ6iuGOcRuKQ
        F9C9U5A/iyrPcntQSY0s+M+y5xn2d2mrBay2XO8UL7KUSSIroOsniQlvlBw2UUq2Lcnem8E4yFqS7M6E
        bNu7WGR7MIJYUbSs0udBUFFeQFWf1SuQcjPbgGuApd5NIAcsjH5u0Gd9x3alCrlN6j1mUcTgnG7LvGci
        aJSNzMTHasWGFIQe0pGPZLk+FbO1LGK3vLm3gZFWO4dYojF1jDIAGmVhlc7uDg5HM15tdmDVoVBAzjUw
        lPynUu71mHVlFIIGC6gkkYOTg9CMUFn1hHVoMsSOttAUjXHESyN7OAQ2Nx3jjkV3UtooVAUsXHtSh3Qu
        e/SwJXx37ye4eWZIwVQDJADEDTq08PVBwqjkg3DJ4kknQmnzWCtiHL6YbPU+s0boeFKPa4hXluX2+PF+
        hlupLce3ArY54Dn+/n76/LW6t39WFo8/QwFP2SN9cu5JO6ufc2AO9jpGdx557u+qdXWybPTdVUbyhFJL
        bu67jY2peorkRxoDzYKoPeNQFcqa5bt8uXl2Vs3CakEnNshvrruP+++uTI1WwjbIwYjEOVpJ5PNW4PZ0
        PNxMT3ngB31tWmyUIzIWLHsrWtELygAZIwoA4knsHbvxV3bK2VDZWgYRxPMJgk0koyMdWzMkWpSCNYEY
        xxPEjBxthGyPl8VVdSo7lJ3tj1ZBByp4E7iD2Ef7+FYJBuzVqek7o3CjyvbJoQSdVIgBCpIVDoyjkrDk
        N2cY4nFWN7BHn/v41yotjJ4SecovZa/mjCRXjFZFFfoWq7mnUuYtNAlbKx1kS3Y8FJ8BmuaxYsO2aypX
        6UrpxbKmbhDJ9k1sJ0duD+ib4fnUe0RpWDqfa+TORFDXWsoDlQFLEkAAcSScAAdpOPfWT/h5jOHBU8d/
        YONdvoOiG7V5MhIo3kJAyVAGkNw+aX1Z5ac1Kn9UinGR7Chbe8vc39s+j25EEsguElljjR5LdVb2XXVi
        OTVh2A340juJOMw/o1L62knOMr5Eah+yauee++TySyzyJ8nSC3cKjE5Eb3PVmPB3lytuMZORkHcN9RXt
        oIL+eNQAocsoHAKc6VHcFcDyq2qrwZg0fU1MTB99uZ9P7CXFtbA8RBF+wK6NcTodK72Nq0hyzQqST3jI
        +GK7dSSsrGWctaTlxYpSldIilKUApSlAKUpQClKUApSlAKUpQCvmzpDArme1S30yRXl2DINOGBkOlc+0
        W3AkcACvbX0nXznt2eaS+u4lZY5usl0db6o9sljgA5YgkjiN3YKrqSaVltZtwNGE5Oc3aMc3ba/n9N91
        wOjO2JNnXKO6krvSRObxNucY8N4zzAqdpZNHKt7YyRzR56xMLvZjnc0igsu5jmORTpI9UKOFbXfRG/DM
        zQvKc5LRsspPfhCW94rAuwbxDk2tyuOYhmU+/FIwcdjFXEU6rtKDtus1dedueVrW3pNWvc9OdpK2qWKy
        kUZUAoFlwSCQQ02kDKqTv36RWtb9MrrAf5Bs7q1YkBIg0gLDBKoJcZOACcjlVc9fdJ7T3SeLSL95r1Ht
        eb+dyebA/eDUnr93Ur/wr3y5Rf7os616eXK46rZduFG/2epYEBzkIC2dzv7JJ9c7t+/fi9KFyAFi2bkK
        MaWcwYA3DSCpBHdnPdVVDa8/87J8oz/godo3B/8Acn7Mf7n+8eFPq4Ln/Q5q4f75fpj/AOyQ37Szy3M5
        wvWyl2t5PVTDA6v4Ueu4XI4KpPZjdWRLuONOrhHqg5J7T2n8By795MZ+XXH84JHYRGf8NbrbQmUL/FjP
        AlFDDxHDzxVVSFSatlY9HA18Dhpdp9Tktl0su9fVt72/C2Zvs7Hka/OpbsPurHYdLHhP8KI5V56sI3kw
        3e8VN9i7etbtSYRgjGpSBkZ7xuPDkaodCUdp61LStGs0o3vweT+eFyGS27hWYRsdKlsAHJ3ZwO+tTpv0
        ea2itbhZzIZ49RGAFxhWJj7E3jfkk5U88C0QV7BXD2n0VspSWdArHfkHTvznOk+rnJJ4cSanSahtM+ka
        NTEpKGVtz3vjlv4X5oqvo9PqWWInOfXXy9r8K15o/Wx31J9rdGFt5VmhmVhneh3HB47xuPbyrgXrjLPn
        cAceODj44rrs53jvKqcalPDKFZWcb271t9b+Vsjd9HcGu8iYrnSzS47SgLAb/wDqC1am1uovIJWSUhVn
        t0kixlo5o7gl/Vzj1+sbJBwSARqJOa29FYX5VpcAqYJVIIyCCu8Y57s1ZeyrW2tDJLakpFrkWQEOQ0ga
        NN2sZ0KxZeOMkjtNbEfOGtt/biTC52ehMjLDPcvJnd1gkDrGo7Fzx5YUcc1TdwmTLjgGx38SR91XBcCO
        ISBItRlt5JHuhpKyBM5VjksCCQNPA4zxBqo4MEzZOMsB9lSPxqFT8rNOEV60Vx9iR7K6KRhA9zJgkZ0A
        gY+se3wra+TWScAh8SXrh2qxniWPhpH7bVutDD2L/WTBf2EP31gau82fXUbQj9EF4vPrb2Oh/wAStk9l
        F8lFeW6TRjhgeVaibO1/xSRt9RJp/iD+FbFt0RvH9i2uf1bbqR75FFdVNPczk8bKGTnFea/ex+r0mJ9k
        E8OA8fGscu3Ze1h4+p8TiurB6N9pPxtXA7ZLiMfBHJ+FbsHoc2gxGo2kY+s7sP7n41NUe4x1NKRW2on4
        fGiFX96ZBvbdzJOfLPZ+Qrq+jrqne4WcExtbNqAJBx1iZA04Oc4AA3nhvziuH032PJY3c1o7a9Gkh9On
        WrKGDBcnHEjid4NbPo92uLa9ikfGgko2eAVxuJ7g2k+VaKUNRHiY/FKvJW2L56Fl3MNuIktSnWiMZjgf
        SC2hXxAZASC6CN2IO4ncdxzUetOj0l/teaMerhVaRvoLiMHxbIIA7R2A471xsNY8C4lZRFL8tLqCRkyX
        J06woViyaF3eOBuBmnousNNn8oZQJLmR5mOPWKFm6oE8wF3j6x7TVrMKbWaJbawLGiRoMKihQOwKMD4C
        s1KVwClKUApSlAKUpQClKUApSlAKUpQClKUArn3uyIJt80EUh7XRWO7hvIzW+TWrcbRjT2jQ6m1min/T
        Ds+SweG5tV/gHHVupLkJIMlWyGBGpcjjj1OG+qyl6Y3A9h2XzVvvWvoXpP0hsZIZILlDJG40suOPMEHk
        QQCCN4IB5V867f2BGsp+SPI0fLrQqsO7KkhvHC+FDhtQekC+XhcP9lPwWttfSZejjLq8V/8Ayokdlydg
        99dLY1qkbh5V1FTlVIyuRwLdvhw8a6C4NkbK25PDFPiyCyIHCy9YrgHhqXBAJGDjPPyrbfYe1x7Vvs1/
        9/8AVioTN05vD+lb3mtOXppdn9K3vocJvPY349rZNi/h1H4vWo9zdR8djQL9URf4M1AJ+kNw59aRvea1
        pNpyni7e80BYLdMbiPjs/T4Mw+5K4130wnZsuhzyy53DsAMe6obJcMeLGsDSnvqMoKWTNGHxVTDtyptJ
        vuT9U7EyPTCQfMz/AFg/FaP01kH6L/uL+5UL1mvSsar7CHxmv8Xxf3L9MfY7990pnk4IB+v/AONR+521
        JIrKcYI/Lur2M1oXEelu41JUoLYiqppLE1E1KeTy3L0R3eg1+sN1C7+xr0v9RwVbPkxq1L63YXzMijqb
        a1jRRhsL1kyjepGOEJbIz6oQ537qOtpMGrS2J05jktfk14hdQFGQ5RiqnIRiOK8uPAkEc6sMJ7uLKaxs
        rmNyBFJcSxwLwPVsRqwOSjf5hqgtpaIA3WYYl2biwAzjduxnhUn2tezbQkLKp6tcqoBJAzvO/mTzNZbP
        oZO+PVx76PM6m1miOrHHyRfMA/fWxFMV9k6fq+r91Tqx9G0hxkNXfs/Rio9rPvrlg23tKwS9m/lJPtN+
        dbEV1Pyd/eauG09H8C8QK60HRW3X5o91ducsUpDc3fJ5fJmreg2htEH1WnPm1XXFseFeCD3CtlLVBwUe
        6uHT5v6ZbIvbwpM0UjSoujeD6yZJC57QSfeajVt0W2hkabK4PhEx/CvrnQOwe6vdAfP2xOjG17oRwTxT
        pAvHrGK4A4AITx7DjdV3bOjmRVQpGqqoUAclAwAPACunSgFKUoBSlKAUpSgFKUoBSlKAUpSgFKUoBSlK
        AVgktUb2lB8qz0oDl3GwLV/bhQ+Vc+XoNs9uNuvkSPxqSUoCIyejjZx/QkeDGtWT0WbPPBXH63+lTilA
        V/J6J7I8GkHmK1ZfQ9anhK48hVlUoCrH9DcPKc+a/wCtaz+hkcrhfNTVuUoCnH9DL8p09xrC3oal5TR/
        H8qumlAUp/ybm/lI/efyr2PQ5L/KJ7zV0UoCl/8Ak3J/KD3/AOlG9CRb2p93vq6KUBTcXoGh+ddSj6un
        8Vrp2PoTsU9uWeTuLhf2VBq0aUuDh7I6LWlsoWKIYHDJJ++uwkKjgoHlWSlAKUpQClKUApSlAKUpQClK
        UApSlAKUpQClKUApSlAKUpQH/9k=
</value>
  </data>
</root>